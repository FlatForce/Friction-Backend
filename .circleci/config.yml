version: 2.1

jobs:
  deploy:
    docker:
      - image: amazon/aws-cli
    environment:
      AWS_DEFAULT_REGION: "${AWS_REGION}"
      AWS_ROLE_ARN: "${PIPELINE_ROLE_ARN}"
    steps:
      - run:
          name: authenticate-and-interact
          command: |
            # use the OpenID Connect token to obtain AWS credentials
            echo ${AWS_ROLE_ARN}
            echo ${AWS_DEFAULT_REGION}
            read -r AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN \<<< \
              $(aws sts assume-role-with-web-identity \
              --role-arn ${AWS_ROLE_ARN} \
              --role-session-name "CircleCI-${CIRCLE_WORKFLOW_ID}-${CIRCLE_JOB}" \
              --web-identity-token $CIRCLE_OIDC_TOKEN \
              --duration-seconds 3600 \
              --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' \
              --output text)
            export AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN
            # interact with AWS
            aws sts get-caller-identity
# orbs:
#   aws-cli: circleci/aws-cli@3.1.1
# jobs:
#   configure-role-arn:
#     executor: aws-cli/default
#     steps:
#       - checkout
#       - aws-credentials-setup
#       - run: |
#           aws configure list
# commands: 
#   aws-credentials-setup:
#     # executor: aws-cli/default
#     parameters:
#       role-arn:
#         type: string
#         default: $PIPELINE_ROLE_ARN
#     steps:
#       - checkout
#       - aws-cli/setup:
#           profile-name: circleci
#           aws-access-key-id: AWS_ACCESS_KEY
#           aws-secret-access-key: AWS_ACCESS_SECRET
#           aws-region: AWS_REGION
#       - aws-cli/role-arn-setup:
#           profile-name: friction-pipeline
#           role-arn: << parameters.role-arn >>
#           source-profile: circleci
#       - run: |
#           aws configure list
workflows:
  aws-cli:
    jobs:
      - deploy:
          context: FlatForce Context