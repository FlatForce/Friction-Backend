version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.0.0
  terraform: circleci/terraform@3.1.0

jobs:
  plan:
    machine:
      image: ubuntu-2204:2022.04.2
    steps:
      - aws-cli/install
      - checkout
      - aws-oidc-setup:
          aws-role-arn: "arn:aws:iam::908315850849:role/friction-pipeline-role"
      - terraform/install
      - run:
          name: Plan
          command: |
            cd functions/lambda-template/arch
            terraform init -input=false
            terraform plan -input=false -out=tfplan
            ls
      - persist_to_workspace:
          root: .
          paths:
            - .
            
  apply:
    machine:
      image: ubuntu-2204:2022.04.2
    steps:
      - attach_workspace:
          at: .
      - aws-cli/install
      - aws-oidc-setup:
          aws-role-arn: "arn:aws:iam::908315850849:role/friction-pipeline-role"
      - terraform/install
      - run:
          name: Apply
          command: |
            cd functions/lambda-template/arch
            terraform apply -auto-approve tfplan
      - persist_to_workspace:
          root: .
          paths:
            - .

commands:
  aws-oidc-setup:
    description: Setup AWS auth using OIDC token
    parameters:
      aws-role-arn:
        type: string
    steps:
      - run:
          name: Get short-term credentials
          command: |
            STS=($(aws sts assume-role-with-web-identity --role-arn << parameters.aws-role-arn >> --role-session-name "${CIRCLE_BRANCH}-${CIRCLE_BUILD_NUM}" --web-identity-token "${CIRCLE_OIDC_TOKEN}" --duration-seconds 900 --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' --output text))
            echo "export AWS_ACCESS_KEY_ID=${STS[0]}" >> $BASH_ENV
            echo "export AWS_SECRET_ACCESS_KEY=${STS[1]}" >> $BASH_ENV
            echo "export AWS_SESSION_TOKEN=${STS[2]}" >> $BASH_ENV
      - run:
          name: Verify AWS credentials
          command: aws sts get-caller-identity

workflows:
  aws-cli:
    jobs:
      - plan:
          context: FlatForce Context
      - apply:
          context: FlatForce Context
          requires:
            - plan